{
	"x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
	"openapi": "3.0.0",
	"info": {
		"title": "Example API",
		"description": "REST API for example.",
		"version": "v1"
	},
	"servers": [
		{
			"url": "https://localhost:44356"
		}
	],
	"paths": {
		"/Games/Add": {
			"post": {
				"tags": [
					"Games"
				],
				"summary": "Creates a game",
				"operationId": "Games_AddGame",
				"requestBody": {
					"x-name": "model",
					"description": "AddGameRequest Add game request ",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddGameRequest"
							}
						}
					},
					"required": true,
					"x-position": 1
				},
				"responses": {
					"200": {
						"description": " Game object ",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/Games/Remove/{id}": {
			"post": {
				"tags": [
					"Games"
				],
				"summary": "Removes a game from the database",
				"operationId": "Games_RemoveGame",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "StringUser Id",
						"schema": {
							"type": "string",
							"nullable": true
						},
						"x-position": 1
					}
				],
				"responses": {
					"200": {
						"description": " Game object ",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					}
				}
			}
		},
		"/Games/Game/{id}": {
			"get": {
				"tags": [
					"Games"
				],
				"summary": "Gets game by given id",
				"operationId": "Games_GetGameById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "String Game id ",
						"schema": {
							"type": "string",
							"nullable": true
						},
						"x-position": 1
					}
				],
				"responses": {
					"200": {
						"description": " Game object ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Game"
								}
							}
						}
					}
				}
			}
		},
		"/Games/User/Games/{id}": {
			"get": {
				"tags": [
					"Games"
				],
				"summary": "Returns the purchased games for the given user id",
				"operationId": "Games_ListUserGames",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "String User id ",
						"schema": {
							"type": "string",
							"nullable": true
						},
						"x-position": 1
					}
				],
				"responses": {
					"200": {
						"description": " Enumeration of game items ",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/GameItem"
									}
								}
							}
						}
					}
				}
			}
		},
		"/Games/List": {
			"post": {
				"tags": [
					"Games"
				],
				"summary": "Returns the purchased games for the given user id",
				"operationId": "Games_ListGameItems",
				"requestBody": {
					"x-name": "filter",
					"description": "GameFilter Game filter ",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GameFilter"
							}
						}
					},
					"required": true,
					"x-position": 1
				},
				"responses": {
					"200": {
						"description": " Enumeration of game items ",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/GameItem"
									}
								}
							}
						}
					}
				}
			}
		},
		"/Users/Authenticate": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Authenticates the given login request",
				"operationId": "Users_Authenticate",
				"requestBody": {
					"x-name": "model",
					"description": "AuthenticateRequestAuthentication request model",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthenticateRequest"
							}
						}
					},
					"required": true,
					"x-position": 1
				},
				"responses": {
					"200": {
						"description": "Authentication response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthenticateResponse"
								}
							}
						}
					}
				}
			}
		},
		"/Users/User/{id}": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Gets user by given id",
				"operationId": "Users_GetUserById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "String User id ",
						"schema": {
							"type": "string",
							"nullable": true
						},
						"x-position": 1
					}
				],
				"responses": {
					"200": {
						"description": "User model",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserItem"
								}
							}
						}
					}
				}
			}
		},
		"/Users/Test": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Authenticates the given login request",
				"operationId": "Users_Test",
				"responses": {
					"200": {
						"description": "Authentication response",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/Users/Register": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Registers a user",
				"operationId": "Users_Register",
				"requestBody": {
					"x-name": "model",
					"description": "UserRegister user model",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"required": true,
					"x-position": 1
				},
				"responses": {
					"200": {
						"description": "Ok response with message",
						"content": {
							"application/octet-stream": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					}
				}
			}
		},
		"/Users/Buy/Game": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Adds a game to the user games enumeration",
				"operationId": "Users_BuyGame",
				"requestBody": {
					"x-name": "request",
					"description": "BuyGameRequestRegister user model",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BuyGameRequest"
							}
						}
					},
					"required": true,
					"x-position": 1
				},
				"responses": {
					"200": {
						"description": "Ok response"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"AddGameRequest": {
				"type": "object",
				"description": "Represents add game request",
				"additionalProperties": false,
				"properties": {
					"name": {
						"type": "string",
						"description": "Gets or sets name",
						"nullable": true
					},
					"description": {
						"type": "string",
						"description": "Gets or sets description",
						"nullable": true
					},
					"price": {
						"type": "number",
						"description": "Gets or sets price",
						"format": "decimal"
					},
					"rating": {
						"type": "number",
						"description": "Gets or sets rating",
						"format": "float"
					},
					"state": {
						"description": "Gets or sets state",
						"oneOf": [
							{
								"$ref": "#/components/schemas/GameState"
							}
						]
					},
					"coverImage": {
						"type": "string",
						"description": "Gets or sets cover image",
						"nullable": true
					},
					"imageUrls": {
						"type": "array",
						"description": "Gets or sets image urls",
						"nullable": true,
						"items": {
							"type": "string"
						}
					},
					"genre": {
						"description": "Gets or sets genre",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Genre"
							}
						]
					},
					"isFeatured": {
						"type": "boolean",
						"description": "Gets or sets is featured"
					},
					"companyName": {
						"type": "string",
						"description": "Gets or sets compamy name",
						"nullable": true
					}
				}
			},
			"GameState": {
				"type": "string",
				"description": "Representes enumeration of game states",
				"x-enumNames": [
					"Released",
					"EarlyAccess",
					"Preorder"
				],
				"enum": [
					"Released",
					"EarlyAccess",
					"Preorder"
				]
			},
			"Genre": {
				"type": "string",
				"description": "Representes enumeration of game genres",
				"x-enumNames": [
					"Cooperative",
					"Action",
					"ActionAdventure",
					"Adventure",
					"Rpg",
					"Simulation",
					"Strategy",
					"Sport"
				],
				"enum": [
					"Cooperative",
					"Action",
					"ActionAdventure",
					"Adventure",
					"Rpg",
					"Simulation",
					"Strategy",
					"Sport"
				]
			},
			"Game": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string",
						"description": "Gets or sets id",
						"nullable": true
					},
					"name": {
						"type": "string",
						"description": "Gets or sets name",
						"nullable": true
					},
					"description": {
						"type": "string",
						"description": "Gets or sets description",
						"nullable": true
					},
					"price": {
						"type": "number",
						"description": "Gets or sets price",
						"format": "decimal"
					},
					"rating": {
						"type": "number",
						"description": "Gets or sets rating",
						"format": "float"
					},
					"reviews": {
						"type": "array",
						"description": "Gets or sets reviews",
						"nullable": true,
						"items": {
							"$ref": "#/components/schemas/Review"
						}
					},
					"state": {
						"description": "Gets or sets state",
						"oneOf": [
							{
								"$ref": "#/components/schemas/GameState"
							}
						]
					},
					"coverImage": {
						"type": "string",
						"description": "Gets or sets cover image",
						"nullable": true
					},
					"imageUrls": {
						"type": "array",
						"description": "Gets or sets image urls",
						"nullable": true,
						"items": {
							"type": "string"
						}
					},
					"genre": {
						"description": "Gets or sets genre",
						"oneOf": [
							{
								"$ref": "#/components/schemas/Genre"
							}
						]
					},
					"isFeatured": {
						"type": "boolean",
						"description": "Gets or sets is featured"
					},
					"companyName": {
						"type": "string",
						"description": "Gets or sets company name",
						"nullable": true
					}
				}
			},
			"Review": {
				"type": "object",
				"description": "Represents review",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string",
						"description": "Gets or sets id",
						"nullable": true
					},
					"content": {
						"type": "string",
						"description": "Gets or sets content",
						"nullable": true
					},
					"userId": {
						"type": "string",
						"description": "Gets or sets user id",
						"nullable": true
					},
					"username": {
						"type": "string",
						"description": "Gets or sets username",
						"nullable": true
					},
					"upvotes": {
						"type": "integer",
						"description": "Gets or sets upvotes",
						"format": "int32"
					}
				}
			},
			"GameItem": {
				"type": "object",
				"description": "Represents game item",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string",
						"description": "Gets or sets id",
						"nullable": true
					},
					"price": {
						"type": "number",
						"description": "Gets or sets price",
						"format": "decimal"
					},
					"rating": {
						"type": "number",
						"description": "Gets or sets rating",
						"format": "float"
					},
					"coverImage": {
						"type": "string",
						"description": "Gets or sets cover image",
						"nullable": true
					},
					"isFeatured": {
						"type": "boolean",
						"description": "Gets or sets is featured"
					}
				}
			},
			"GameFilter": {
				"type": "object",
				"description": "Represents game filter",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string",
						"description": "Gets or sets id",
						"nullable": true
					},
					"name": {
						"type": "string",
						"description": "Gets or sets name",
						"nullable": true
					},
					"isFeatured": {
						"type": "boolean",
						"description": "Gets or sets is featured"
					},
					"genres": {
						"type": "array",
						"description": "Gets or sets genres",
						"nullable": true,
						"items": {
							"$ref": "#/components/schemas/Genre"
						}
					},
					"states": {
						"type": "array",
						"description": "Gets or sets states",
						"nullable": true,
						"items": {
							"$ref": "#/components/schemas/GameState"
						}
					}
				}
			},
			"AuthenticateResponse": {
				"type": "object",
				"description": "Representes authentication response",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string",
						"description": "Gets or sets id",
						"nullable": true
					},
					"username": {
						"type": "string",
						"description": "Gets or sets username",
						"nullable": true
					},
					"userRole": {
						"description": "Gets or sets user role",
						"oneOf": [
							{
								"$ref": "#/components/schemas/UserRole"
							}
						]
					},
					"tokenProvider": {
						"description": "Gets or sets Token",
						"nullable": true,
						"oneOf": [
							{
								"$ref": "#/components/schemas/TokenProvider"
							}
						]
					}
				}
			},
			"UserRole": {
				"type": "string",
				"description": "Representes enumeration user roles",
				"x-enumNames": [
					"Administrator",
					"User",
					"Company"
				],
				"enum": [
					"Administrator",
					"User",
					"Company"
				]
			},
			"TokenProvider": {
				"type": "object",
				"description": "Represents token provider",
				"additionalProperties": false,
				"properties": {
					"token": {
						"type": "string",
						"description": "Gets or sets token",
						"nullable": true
					},
					"expiresInSeconds": {
						"type": "integer",
						"description": "Gets or sets token expiration in seconds",
						"format": "int64"
					}
				}
			},
			"AuthenticateRequest": {
				"type": "object",
				"description": "Represents authentication request",
				"additionalProperties": false,
				"properties": {
					"username": {
						"type": "string",
						"description": "Gets or sets username",
						"nullable": true
					},
					"password": {
						"type": "string",
						"description": "Gets ot sets password",
						"nullable": true
					}
				}
			},
			"UserItem": {
				"type": "object",
				"description": "Represents authentication request",
				"additionalProperties": false,
				"properties": {
					"id": {
						"type": "string",
						"description": "Gets or sets user id",
						"nullable": true
					},
					"username": {
						"type": "string",
						"description": "Gets or sets username",
						"nullable": true
					},
					"email": {
						"type": "string",
						"description": "Gets or sets email",
						"nullable": true
					},
					"role": {
						"description": "Gets or sets user role",
						"oneOf": [
							{
								"$ref": "#/components/schemas/UserRole"
							}
						]
					},
					"fullName": {
						"type": "string",
						"description": "Gets or sets full name",
						"nullable": true
					}
				}
			},
			"User": {
				"type": "object",
				"description": "Representes user",
				"additionalProperties": false,
				"properties": {
					"username": {
						"type": "string",
						"description": "Gets or sets username",
						"nullable": true
					},
					"email": {
						"type": "string",
						"description": "Gets or sets email",
						"nullable": true
					},
					"role": {
						"description": "Gets or sets user role",
						"oneOf": [
							{
								"$ref": "#/components/schemas/UserRole"
							}
						]
					},
					"fullName": {
						"type": "string",
						"description": "Gets or sets full name",
						"nullable": true
					},
					"password": {
						"type": "string",
						"description": "Gets or sets password",
						"nullable": true
					}
				}
			},
			"BuyGameRequest": {
				"type": "object",
				"description": "Represents buy game request",
				"additionalProperties": false,
				"properties": {
					"userId": {
						"type": "string",
						"description": "Gets or sets user id",
						"nullable": true
					},
					"gameId": {
						"type": "string",
						"description": "Gets or sets game id",
						"nullable": true
					}
				}
			}
		},
		"securitySchemes": {
			"JWT": {
				"type": "apiKey",
				"description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
				"name": "Authorization",
				"in": "header"
			}
		}
	}
}